c({"name": "NodeList.__replaceChild__", "params": {"nodelist": {"description": "", "type": "", "optional": false, "order": 0, "name": "nodelist"}, "newChild": {"description": "", "type": "", "optional": false, "order": 1, "name": "newChild"}, "refChildIndex": {"description": "", "type": "", "optional": false, "order": 2, "name": "refChildIndex"}, "inserted": {"order": 3, "description": "", "name": "inserted", "type": "newChild      : Node - the Node to be", "optional": false}, "Node": {"order": 4, "description": "", "name": "Node", "type": "refChildIndex : int     - the array index to hold the", "optional": false}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["NodeList"], "comment": "<p>@method <strong>replaceChild</strong>\n     replace the specified Node in the NodeList at the specified index\n     Used by Node.replaceChild(). Note: Node.replaceChild() is responsible\n     for Node Pointer surgery <strong>replaceChild</strong> simply modifies the internal\n     data structure (Array).</p>", "src": "./steal/rhino/env.js", "line": 2780, "children": []})