c({"name": "jQuery.Observe.prototype.attr", "params": {"attr": {"description": "<p>the attribute to read or write.</p>\n\n<pre><code>o.attr('name') //-&gt; reads the name\no.attr('name', 'Justin') //-&gt; writes the name\n</code></pre>\n\n<p>You can read or write deep property names.  For example:</p>\n\n<pre><code>o.attr('person', {name: 'Justin'})\no.attr('person.name') //-&gt; 'Justin'\n</code></pre>", "type": "String", "optional": false, "order": 0, "name": "attr"}, "val": {"description": "<p>if provided, sets the value.</p>", "type": "Object", "optional": true, "order": 1, "name": "val"}}, "ret": {"description": "<p>the observable or the attribute property.</p>\n\n<p>If you are reading, the property value is returned:</p>\n\n<pre><code>o.attr('name') //-&gt; Justin\n</code></pre>\n\n<p>If you are writing, the observe is returned for chaining:</p>\n\n<pre><code>o.attr('name',\"Brian\").attr('name') //-&gt; Justin\n</code></pre>", "type": "Object"}, "type": "function", "parents": ["jQuery.Observe.prototype"], "comment": "<p>Get or set an attribute on the observe.</p>\n\n<pre><code>o = new $.Observe({});\n\n// sets a user property\no.attr('user',{name: 'hank'});\n\n// read the user's name\no.attr('user.name') //-&gt; 'hank'\n</code></pre>\n\n<p>If a value is set for the first time, it will trigger \nan <code>'add'</code> and <code>'set'</code> change event.  Once\nthe value has been added.  Any future value changes will\ntrigger only <code>'set'</code> events.</p>", "src": "./jquery/lang/observe/observe.js", "line": 274, "children": []})