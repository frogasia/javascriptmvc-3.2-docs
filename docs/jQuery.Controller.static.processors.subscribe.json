c({"name": "jQuery.Controller.static.processors.subscribe", "params": {"el": {"description": "<p>the element being bound.  This isn't used.</p>", "type": "HTMLElement", "optional": false, "order": 0, "name": "el"}, "event": {"description": "<p>the event type (subscribe).</p>", "type": "String", "optional": false, "order": 1, "name": "event"}, "selector": {"description": "<p>the subscription name</p>", "type": "String", "optional": false, "order": 2, "name": "selector"}, "cb": {"description": "<p>the callback function's name</p>", "type": "String", "optional": false, "order": 3, "name": "cb"}, "controller": {"description": "", "type": "", "optional": false, "order": 4, "name": "controller"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Adds OpenAjax.Hub subscribing to controllers.</p>\n\n<pre><code>$.Controller(\"Subscriber\",{\n  \"recipe.updated subscribe\" : function(called, recipe){\n\n  },\n  \"todo.* subscribe\" : function(called, todo){\n\n  }\n})\n</code></pre>\n\n<p>You should typically be listening to jQuery triggered events when communicating between\ncontrollers.  Subscribe should be used for listening to model changes.</p>\n\n<h3>API</h3>\n\n<p>This is the call signiture for the processor, not the controller subscription callbacks.</p>", "parents": ["jQuery.Controller.static.processors"], "plugin": "jquery/controller/subscribe", "src": "./jquery/controller/subscribe/subscribe.js", "line": 3, "children": []})