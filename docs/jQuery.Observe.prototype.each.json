c({"name": "jQuery.Observe.prototype.each", "params": {"handler(attrName,value)": {"order": 0, "description": "<p>A function that will get \ncalled back with the name and value of each attribute on the observe.</p>\n\n<p>Returning <code>false</code> breaks the looping.  The following will never\nlog 3:</p>\n\n<pre><code>new Observe({a : 1, b : 2, c: 3})\n  .each(function(name, value){\n    console.log(value)\n    if(name == 2){\n      return false;\n    }\n  })\n</code></pre>", "name": "handler(attrName,value)", "type": "function", "optional": false}}, "ret": {"description": "<p>the original observable.</p>", "type": "jQuery.Observe"}, "type": "function", "parents": ["jQuery.Observe.prototype"], "comment": "<p>Iterates through each attribute, calling handler \nwith each attribute name and value.</p>\n\n<pre><code>new Observe({foo: 'bar'})\n  .each(function(name, value){\n    equals(name, 'foo')\n    equals(value,'bar')\n  })\n</code></pre>", "src": "./jquery/lang/observe/observe.js", "line": 323, "children": []})