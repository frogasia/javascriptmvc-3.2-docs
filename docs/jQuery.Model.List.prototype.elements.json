c({"name": "jQuery.Model.List.prototype.elements", "params": {"context": {"description": "<p>If provided, only elements inside this element that represent this model will be returned.</p>", "type": "String|jQuery|element", "optional": false, "order": 0, "name": "context"}}, "ret": {"description": "<p>Returns a jQuery wrapped nodelist of elements that have these model instances identities in their class names.</p>", "type": "jQuery"}, "type": "function", "parents": ["jQuery.Model.List.prototype"], "comment": "<p>Returns elements that represent this list.  For this to work, your element's should\nus the [jQuery.Model.prototype.identity identity] function in their class name.  Example:</p>\n\n<pre><code>&lt;div class='todo &lt;%= todo.identity() %&gt;'&gt; ... &lt;/div&gt;\n</code></pre>\n\n<p>This also works if you hooked up the model:</p>\n\n<pre><code>&lt;div &lt;%= todo %&gt;&gt; ... &lt;/div&gt;\n</code></pre>\n\n<p>Typically, you'll use this as a response to a Model Event:</p>\n\n<pre><code>\"{Todo} destroyed\": function(Todo, event, todo){\n  todo.elements(this.element).remove();\n}\n</code></pre>", "src": "./jquery/model/list/list.js", "line": 529, "children": []})