c({"name": "HTMLDocument.updateCss2Props", "params": {"elem": {"description": "", "type": "", "optional": false, "order": 0, "name": "elem"}, "values": {"description": "", "type": "", "optional": false, "order": 1, "name": "values"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["HTMLDocument"], "comment": "<p>Change for how 'setAttribute(\"style\", ...)' works</p>\n\n<p>We are truly adding functionality to HtmlElement.setAttribute, not\nreplacing it.  So we need to save the old one first, call it, then\ndo our stuff.  If we need to do more hacks like this, HTMLElement\n(or regular Element) needs to have a hooks array or dispatch table\nfor global changes.</p>\n\n<p>This could be wrapped in a closure if desired.</p>", "src": "./steal/rhino/env.js", "line": 12030, "children": []})