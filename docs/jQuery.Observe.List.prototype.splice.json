c({"name": "jQuery.Observe.List.prototype.splice", "params": {"index": {"description": "<p>where to start removing or adding items</p>", "type": "Number", "optional": false, "order": 0, "name": "index"}, "count": {"description": "<p>the number of items to remove</p>", "type": "Object", "optional": false, "order": 1, "name": "count"}, "added": {"order": 2, "description": "<p>an object to add to </p>", "name": "added", "type": "Object", "optional": true}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["jQuery.Observe.List.prototype"], "comment": "<p>Remove items or add items from a specific point in the list.</p>\n\n<h3>Example</h3>\n\n<p>The following creates a list of numbers and replaces 2 and 3 with\n\"a\", and \"b\".</p>\n\n<pre><code>var l = new $.Observe.List([0,1,2,3]);\n\nl.bind('change', function( ev, attr, how, newVals, oldVals, where ) { ... })\n\nl.splice(1,2, \"a\", \"b\"); // results in [0,\"a\",\"b\",3]\n</code></pre>\n\n<p>This creates 2 change events.  The first event is the removal of \nnumbers one and two where it's callback values will be:</p>\n\n<ul>\n<li>attr - \"1\" - indicates where the remove event took place</li>\n<li>how - \"remove\"</li>\n<li>newVals - undefined</li>\n<li>oldVals - [1,2] -the array of removed values</li>\n<li>where - 1 - the location of where these items where removed</li>\n</ul>\n\n<p>The second change event is the addition of the \"a\", and \"b\" values where \nthe callback values will be:</p>\n\n<ul>\n<li>attr - \"1\" - indicates where the add event took place</li>\n<li>how - \"added\"</li>\n<li>newVals - [\"a\",\"b\"]</li>\n<li>oldVals - [1, 2] - the array of removed values</li>\n<li>where - 1 - the location of where these items where added</li>\n</ul>", "src": "./jquery/lang/observe/observe.js", "line": 733, "children": []})