c({"name": "jquery.event.pause", "type": "page", "comment": "<p>The jquery/event/pause plugin adds the ability to pause and \nresume events. </p>\n\n<pre><code>$('#todos').bind('show', function(ev){\n  ev.pause();\n\n  $(this).load('todos.html', function(){\n    ev.resume();\n  });\n})\n</code></pre>\n\n<p>When an event is paused, stops calling other event handlers for the \nevent (similar to event.stopImmediatePropagation() ).  But when \nresume is called on the event, it will begin calling events on event handlers\nafter the 'paused' event handler.</p>\n\n<p>Pause-able events complement the [jQuery.event.special.default default]\nevents plugin, providing the ability to easy create widgets with \nan asynchronous API.  </p>\n\n<h2>Example</h2>\n\n<p>Consider a basic tabs widget that:</p>\n\n<ul>\n<li>trigger's a <strong>show</strong> event on panels when they are to be displayed</li>\n<li>shows the panel after the show event.</li>\n</ul>\n\n<p>The sudo code for this controller might look like:</p>\n\n<pre><code>$.Controller('Tabs',{\n  \".button click\" : function( el ){\n    var panel = this.getPanelFromButton( el );\n    panel.triggerAsync('show', function(){\n      panel.show();\n    })\n  }\n})\n</code></pre>\n\n<p>Someone using this plugin would be able to delay the panel showing until ready:</p>\n\n<pre><code>$('#todos').bind('show', function(ev){\n  ev.pause();\n\n  $(this).load('todos.html', function(){\n    ev.resume();\n  });\n})\n</code></pre>\n\n<p>Or prevent the panel from showing at all:</p>\n\n<pre><code>$('#todos').bind('show', function(ev){\n  if(! isReady()){\n    ev.preventDefault();\n  }\n})\n</code></pre>\n\n<h2>Limitations</h2>\n\n<p>The element and event handler that the <code>pause</code> is within can not be removed before \nresume is called.</p>\n\n<h2>Big Example</h2>\n\n<p>The following example shows a tabs widget where the user is prompted to save, ignore, or keep editing\na tab when a new tab is clicked.</p>\n\n<div class='demo_wrapper' data-demo-src='jquery/event/pause/pause.html'></div>\n\n<p>It's a long, but great example of how to do some pretty complex state management with JavaScriptMVC.</p>", "title": "Pause-Resume", "plugin": "jquery/event/pause", "parents": ["specialevents"], "src": "./jquery/event/pause/pause.js", "line": 21, "children": []})