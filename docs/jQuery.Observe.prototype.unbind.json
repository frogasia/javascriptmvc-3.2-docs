c({"name": "jQuery.Observe.prototype.unbind", "params": {"eventType": {"description": "<ul>\n<li>the type of event with\nany optional namespaces.  Currently, only <code>change</code> events\nare supported with bind.</li>\n</ul>", "type": "String", "optional": false, "order": 0, "name": "eventType"}, "handler": {"description": "<ul>\n<li>The original handler function passed\nto [jQuery.Observe.prototype.bind bind].</li>\n</ul>", "type": "Function", "optional": true, "order": 1, "name": "handler"}}, "ret": {"description": "<p>the original observe for chaining.</p>", "type": "jQuery.Observe"}, "type": "function", "parents": ["jQuery.Observe.prototype"], "comment": "<p>Unbinds a listener.  This uses [http://api.jquery.com/unbind/ jQuery.unbind]\nand works very similar.  This means you can \nuse namespaces or unbind all event handlers for a given event:</p>\n\n<pre><code>// unbind a specific event handler\no.unbind('change', handler)\n\n// unbind all change event handlers bound with the\n// foo namespace\no.unbind('change.foo')\n\n// unbind all change event handlers\no.unbind('change')\n</code></pre>", "src": "./jquery/lang/observe/observe.js", "line": 512, "children": []})