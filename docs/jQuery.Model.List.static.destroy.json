c({"name": "jQuery.Model.List.static.destroy", "type": "function", "parents": ["jQuery.Model.List.static"], "comment": "<p>Destroy is used to remove a set of model instances from the server. By implementing \ndestroy along with the rest of the [jquery.model.services service api], your models provide an abstract\nservice API.</p>\n\n<p>You can implement destroy with a string like:</p>\n\n<pre><code>$.Model.List(\"Thing\",{\n  destroy : \"POST /thing/destroy/\"\n})\n</code></pre>\n\n<p>Or you can implement destroy manually like:</p>\n\n<pre><code>$.Model.List(\"Thing\",{\n  destroy : function(ids, success, error){\n       return $.ajax({\n          url: \"/thing/destroy/\",\n          data: ids,\n          success: success,\n          error: error,\n          type: \"POST\"\n       });\n  }\n})\n</code></pre>\n\n<p>Then you delete models by calling the [jQuery.Model.List.prototype.destroy prototype delete method].</p>\n\n<pre><code>listInstance.destroy();\n</code></pre>\n\n<p>By default, the request will POST an array of ids to be deleted in the body of the Ajax request.</p>\n\n<pre><code>{ \n    ids: [5,10,20]\n}\n</code></pre>", "params": {"ids": {"order": 0, "description": "<p>the ids of the instances you want destroyed</p>", "name": "ids", "type": "Array", "optional": false}, "success": {"order": 1, "description": "<p>the callback function</p>", "name": "success", "type": "Function", "optional": false}, "error": {"order": 2, "description": "<p>a function to callback if something goes wrong.  </p>", "name": "error", "type": "Function", "optional": false}}, "src": "./jquery/model/list/list.js", "line": 328, "children": []})